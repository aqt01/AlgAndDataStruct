		bst.DeleteNode (4);
			Console.WriteLine ("After 25 delete");
			
//			Console.WriteLine (" left 20" + bst.FindNode(30).L.key);
			bst.print (bst.getRoot ());
			Console.WriteLine("Left 5 key: " + bst.FindNode(5).L.key);
			Console.WriteLine("L R 5 key: " + bst.FindNode().L.R.key);
			//Console.WriteLine("R R 5 key: " + bst.FindNode(30).R.R.key);
			//Console.WriteLine("R L 5 key: " + bst.FindNode(30).R.L.key);
			//Console.WriteLine (bst.FindNode (30).R.key);
			 */
			
			
			
			/*
			bst.DeleteNode (25);
			
			
			
			Console.WriteLine ("After 25 delete");
			
//			Console.WriteLine (" left 20" + bst.FindNode(30).L.key);
			bst.print (bst.getRoot ());
			//Console.WriteLine("R key: " + bst.FindNode(30).R.key);
			
			Console.WriteLine("R L 5 key: " + bst.FindNode(20).R.key);
			Console.WriteLine("R L 5 key: " + bst.FindNode(20).R.R.key);
			//Console.WriteLine("R L 5 key: " + bst.FindNode(20).R.R.R.key);		
			
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.L.key);		
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.key);		
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.R.key);		
			*/
			
			
			
			// proof to delete 30
			/*
			bst.DeleteNode (30);
			Console.WriteLine ("After 40 delete");
			
//			Console.WriteLine (" left 20" + bst.FindNode(30).L.key);
			bst.print (bst.getRoot ());
			//Console.WriteLine("R key: " + bst.FindNode(30).R.key);
			
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.key);
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.key);
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.key);		
			
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.L.key);		
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.key);		
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.R.key);		
			*/
			
			
			// proof to delete 30
			/*
			bst.DeleteNode (30);
			Console.WriteLine ("After 40 delete");
			
//			Console.WriteLine (" left 20" + bst.FindNode(30).L.key);
			bst.print (bst.getRoot ());
			//Console.WriteLine("R key: " + bst.FindNode(30).R.key);
			
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.key);
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.key);
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.key);		
			
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.L.key);		
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.key);		
			Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.R.key);		
			*/
			
			
			// prueba borrando el 1, un leave con un tree en su derecha
			
			
			
			// Borrando el 1 con un
			
			/*
			bst.DeleteNode (1);
			Console.WriteLine ("After 40 delete");
			
			
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" FInD:  " + bst.getRoot().key);
			
			Console.WriteLine ("Root L:  " + bst.getRoot().L.key);
			Console.WriteLine ("Root L:  " + bst.getRoot().L.L.key);
			Console.WriteLine ("Root L:  " + bst.getRoot().L.L.L.key);
			
			Console.WriteLine (" FInD:  " + bst.FindNode(3).key);
			Console.WriteLine (" L " + bst.FindNode(3).L.key);
			*/
			
			//Console.WriteLine("R L 4 key: " + bst.FindNode(1).key);
			//Console.WriteLine("R L 4 key: " + bst.FindNode(3).L.key);
			//Console.WriteLine("R L 5 key: " + bst.FindNode(3).L.L.key);
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.key);		
			
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.L.key);		
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.key);		
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.L.R.R.key);		
			//Console.WriteLine("R L 5 key: " + bst.FindNode(25).R.R.R.key);
			//Console.WriteLine("R R 5 key: " + bst.FindNode(30).R.R.key);
			//Console.WriteLine("R L 5 key: " + bst.FindNode(30).R.L.key);
			//Console.WriteLine (bst.FindNode (30).R.key);
			
			
			
			// Borrando el 4 con un
			//hecho
			/*
			bst.DeleteNode (4);
			Console.WriteLine ("After 40 delete");
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" Root:  " + bst.getRoot().key);
			Console.WriteLine ("Root L:  " + bst.getRoot().L.key);
			Console.WriteLine ("Root L L:  " + bst.getRoot().L.L.key);
			Console.WriteLine (" FInD 3:  " + bst.FindNode(3).key);
			Console.WriteLine (" 3 L " + bst.FindNode(3).L.key);
			Console.WriteLine(" 3 L R: " + bst.FindNode(3).L.R.key);
			// must blow up
			//Console.WriteLine(" 3 L R: " + bst.FindNode(3).L.R.L.key);
			
			//Console.WriteLine(" 3 L R: " + bst.FindNode(3).L.R.R.key);
			
			*/
			
			// Borrando el 5 con un
			//hecho
			/*
			bst.DeleteNode (5);
			Console.WriteLine ("After 5 delete");
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" Root:  " + bst.getRoot().key);
			Console.WriteLine ("Root L:  " + bst.getRoot().L.key);
			Console.WriteLine ("Root L L:  " + bst.getRoot().L.L.key);			
			
			Console.WriteLine (" FInD 4:  " + bst.FindNode(4).key);
			
			Console.WriteLine (" 4 R:  " + bst.FindNode(4).R.key);
			Console.WriteLine (" 4 R R:  " + bst.FindNode(4).R.R.key);
			Console.WriteLine (" 4 R L:  " + bst.FindNode(4).R.L.key);
			Console.WriteLine (" 4 L: " + bst.FindNode(4).L.key);
			Console.WriteLine(" 4 L R: " + bst.FindNode(4).L.R.key);
			*/
			
			// Borrando el 17 con un
			//hecho
			/*
			bst.DeleteNode (17);
			Console.WriteLine ("After 5 delete");
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" Father:  " + bst.FindNode(20).key);
			Console.WriteLine ("Father L:  " + bst.FindNode(20).L.key);
			
			Console.WriteLine ("Father L L:  " + bst.FindNode(20).L.L.key);			
			
			
			
			Console.WriteLine (" 15 R:  " + bst.FindNode(15).R.key);
			Console.WriteLine (" 15 R R:  " + bst.FindNode(15).R.R.key);
			Console.WriteLine (" 15 R L:  " + bst.FindNode(15).R.L.key);
		
			Console.WriteLine (" 15 L: " + bst.FindNode(15).L.key);
			*/
		
			// Borrando el 14 con un
			//hecho
			/*
			bst.DeleteNode (14);
			Console.WriteLine ("After 5 delete");
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" Father:  " + bst.FindNode(20).key);
			Console.WriteLine ("Father L:  " + bst.FindNode(20).L.key);
			// must blow up
			//Console.WriteLine ("Father L L:  " + bst.FindNode(20).L.L.key);			
			
			
			
			Console.WriteLine (" 15 R:  " + bst.FindNode(15).R.key);
			Console.WriteLine (" 15 R R:  " + bst.FindNode(15).R.R.key);
			Console.WriteLine (" 15 R L:  " + bst.FindNode(15).R.L.key);

			// blow again
		//	Console.WriteLine (" 15 L: " + bst.FindNode(15).L.key);
			*/
			// Borrando el 19 con un
			//hecho
			/*
			bst.DeleteNode (19);
			Console.WriteLine ("After 19 delete");
			bst.print (bst.getRoot ());
			
			Console.WriteLine (" Father:  " + bst.FindNode(20).key);
			Console.WriteLine ("Father L:  " + bst.FindNode(20).L.key);
			Console.WriteLine (" 15 R:  " + bst.FindNode(15).R.key);
			Console.WriteLine (" 15 R R:  " + bst.FindNode(15).R.R.key);
			// must boom!
			//Console.WriteLine ("15 R R R :  " + bst.FindNode(15).R.R.R.key);			
			Console.WriteLine (" 15 R L:  " + bst.FindNode(15).R.L.key);
			
			*/
			
			// Borrando el 50 con un
			//hecho
			/*
			bst.DeleteNode (50);
			Console.WriteLine ("After 50 delete");
			bst.print (bst.getRoot ());
			
			
			// must blow up
			//Console.WriteLine ("30 R R:  " + bst.FindNode(30).R.R.key);											
			Console.WriteLine (" 30 R:  " + bst.FindNode(30).R.key);
			Console.WriteLine (" 30 R L:  " + bst.FindNode(30).R.L.key);
			*/
